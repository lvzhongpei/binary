＃！/斌/庆典

＃高速新VPN协议WireGuard服务端一键脚本
＃GCP香港和Vutrl搬瓦工测试可用，已经添加自动判断网卡名
＃OpenVZ PVE不能用

#Windows TunSafe版客户端
＃https://tunsafe.com/download

＃Debian9安装WireGuard步骤
＃详细参考逗比https://doub.io/wg-jc1/

#Debian默认往往都没有linux-headers内核，而安装使用WireGuard必须要

＃更新软件包源
apt更新

＃安装和linux-image内核版本相对于的linux-headers内核
apt install linux-headers  -  $（uname -r）-y

＃Debian9安装后内核列表
dpkg -l | grep linux-headers

＃安装二维码插件
apt -y install qrencode

＃安装WireGuard
＃添加不稳定软件包源，以确保安装版本是最新的
echo“deb http://deb.debian.org/debian/ unstable main”> /etc/apt/sources.list.d/unstable.list
echo -e'包：* \ nPin：释放a = unstable \ nPin-Priority：150'> /etc/apt/preferences.d/limit-unstable
 
＃更新一下软件包源
apt更新
 
＃开始安装WireGuard，至于resolvconf我也不清楚这货具体是干嘛的，但是没有安装这个的系统会报错，但是具体会影响哪里使用我也不清楚，为了保险点不出错还是安装吧。一般Debian9都自带了。
apt install wireguard resolvconf -y

＃验证是否安装成功
modprobe wireguard && lsmod | grep wireguard

＃配置步骤WireGuard服务端

＃首先进入配置文件目录
mkdir -p / etc / wireguard
cd / etc / wireguard

＃然后开始生成密匙对（公匙+私匙）。
wg genkey | tee sprivatekey | wg pubkey> spublickey
wg genkey | tee cprivatekey | wg pubkey> cpublickey

＃获得服务器ip
serverip = $（curl -4 icanhazip.com）

＃生成服务端配置文件
回声“[接口]
＃私匙，自动读取上面刚刚生成的密匙内容
PrivateKey = $（cat sprivatekey）

＃VPN中本机的内网IP，一般默认即可，除非和你服务器或客户端设备本地网段冲突
地址= 10.0.0.1/24 

＃运行WireGuard时要执行的iptables防火墙规则，用于打开NAT转发之类的。
＃如果你的服务器主网卡名称不是eth0，那么请修改下面防火墙规则中最后的eth0为你的主网卡名称。
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

＃停止WireGuard时要执行的iptables防火墙规则，用于关闭NAT转发之类的。
＃如果你的服务器主网卡名称不是eth0，那么请修改下面防火墙规则中最后的eth0为你的主网卡名称。
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

#serquest端监听端口，可以自行修改
ListenPort = 9009

#service端请求域名解析DNS
DNS = 8.8.8.8

＃保持默认
MTU = 1300

[对等]
＃公匙，自动读取上面刚刚生成的密匙内容
PublicKey = $（cat cpublickey）

＃VPN内网IP范围，一般默认即可，除非和你服务器或客户端设备本地网段冲突
AllowedIPs = 10.0.0.2/32“> wg0.conf

＃生成客户端配置文件
回声“[接口]
＃私匙，自动读取上面刚刚生成的密匙内容
PrivateKey = $（cat cprivatekey）

#VPN内网IP范围
地址= 10.0.0.2/24

＃解析域名用的DNS
DNS = 8.8.8.8

＃保持默认
MTU = 1300

＃Wireguard客户端配置文件加入PreUp，Postdown命令调用批处理文件
PreUp = start。\ route \ routes-up.bat
PostDown = start。\ route \ routes-down.bat

####正常使用Tunsafe点击连接就会调用routes-up.bat将国内IP写进系统路由表，断开断开则会调用routes-down.bat删除路由表。
####连接成功后可上http://ip111.cn/测试自己的IP。

[对等]
＃公匙，自动读取上面刚刚生成的密匙内容
PublicKey = $（cat spublickey）

＃服务器地址和端口，下面的XXXX记得更换为你的服务器公网IP，端口根据服务端配置时的监听端口填写
端点= $ serverip：9009

＃转发流量的IP范围，下面这个代表所有流量都走VPN
AllowedIPs = 0.0.0.0/0，:: 0/0

＃保持连接，如果客户端或服务端是NAT网络（比如国内大多数家庭宽带没有公网IP，都是NAT），
＃那么就需要添加这个参数定时链接服务端（单位：秒），如果你的服务器和你本地都不是NAT网络，
＃那么建议不使用该参数（设置为0，或客户端配置文件中删除这行）
PersistentKeepalive = 25“| sed'/ ^＃/ d; / ^ \ s * $ / d'> client.conf

＃赋予配置文件夹权限
chmod 777 -R / etc / wireguard
 
sysctl_config（）{
    sed -i'/net.core.default_qdisc/d'/etc/sysctl.conf
    sed -i'/net.ipv4.tcp_congestion_control/d'/etc/sysctl.conf
    echo“net.core.default_qdisc = fq”>> /etc/sysctl.conf
    echo“net.ipv4.tcp_congestion_control = bbr”>> /etc/sysctl.conf
    sysctl -p> / dev / null 2>＆1
}

＃开启BBR
sysctl_config
lsmod | grep bbr
 
＃打开防火墙转发功能
echo 1> / proc / sys / net / ipv4 / ip_forward
echo“net.ipv4.ip_forward = 1”>> /etc/sysctl.conf
sysctl -p

＃启动WireGuard
wg-quick up wg0

＃设置开机启动
systemctl启用wg-quick @ wg0

＃查询WireGuard状态
WG

＃一键WireGuard多用户配置共享脚本 
wget -qO-https：//git.io/fpnQt | 庆典

